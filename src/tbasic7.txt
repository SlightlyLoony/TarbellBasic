*
*
* TARBELL BASIC SOURCE MODULE #7
* COPYRIGHT (C) 1978, 1979 TARBELL ELECTRONICS
* LAST CHANGE ON THIS MODULE MADE 12-17-78.
*
* RTN. C.3
* KEYBOARD INPUT
* OUT: A = ASCII CODE FOR CHARACTER INPUTTED
* USERS ROUTINE HAS RESPONSIBILITY FOR PROVIDING LOWER
* TO UPPER CASE CONVERSION, AND MAKING RUBOUT A
* 7F, HEXADECIMAL.  THE PARITY BIT WILL BE RESET (ZERO)
KYIN	ORI	1	;CLEAR THE ZERO FLAG
	JMP	CONT1	;USE CONTROL C ROUTINE
* RTN. C.4
* OUTPUT TO TERMINAL(S)
* IN: A = ASCII CODE FOR CHARACTER TO BE SENT
* THIS ROUTINE FINDS EACH CHANNEL THAT IS IN TERMINAL MODE,
* SENDS THE CHARACTER, AND UPDATES THE POSITION FLAGS.
* IF A LINE WILL BE OVERRUN, A CARRIAGE RETURN
* WILL BE INSERTED.  IF A RUBOUT CHARACTER IS DETECTED,
* TWO ACTIONS ARE POSSIBLE.  ONE, IF THE RUBOUT FLAG
* IS ZERO, A '@' WILL BE SENT. TWO, IF THE RUBOUT
* FLAG IS NONZERO, THE RUBOUT WILL BE SENT AND
* IT IS ASSUMED THAT THE TERMINAL WILL BACKSPACE
* AND ERASE THE LAST CHARACTER
TOUT	LXI	B,1	;GET CHANNEL ONE FOR STARTERS
	CALL	EDIT1	;CHECK FOR MEMORY STORE TIME
TOUTTAB1	PUSH	PSW	;SAVE CHARACTER
	CPI	0DH	;CARRIAGE RETURN?
	JZ	TOUTZ	;YUP
	CPI	7FH	;RUBOUT?
	JZ	TOUTY	;YUP
	CPI	09H	;IS IT A TAB?
	JZ	TOUTTAB	;YUP
	CPI	0AH	;IS IT LF?
	JZ	TOUTX	;YUP, SO NO POSITION UPDATE
	LDA	POSIT	;GET HEAD POSITION
	INR	A	;UPDATE
	STA	POSIT
TOUTX	POP	PSW	;RESTORE CHARACTER
TOUT1	PUSH	PSW	;SAVE THE CHARACTER
	MVI	A,2	;GET TERMINAL MODE CODE
	CALL	MFND	;FIND A TERMINAL CHANNEL
	JNZ	TOUT2	;OH, OH, NO MORE TERMINALS
	POP	PSW	;GET THE CHARACTER BACK
	PUSH	B	;SAVE THE NEXT CHANNEL
	PUSH	PSW	;SAVE THE CHARACTER
	XCHG		;PUT PARAMETERS ADDRESS IN HL
	CPI	7FH	;IS IT A RUBOUT?
	JZ	TOUT3	;SURE IS
	CPI	0DH	;IS IT A CARRIAGE RETURN?
	JZ	TOUT4	;YUP
	INX	H	;GET ADDRESS OF POSITION FLAG
TOUT9	INR	M	;UPDATE POSITION FLAG
	DCX	H	;GET ADDRESS OF WIDTH FLAG
	MOV	A,M	;GET IT
	INX	H	;GET ADDRESS OF POSITION FLAG AGAIN
	CMP	M	;COMPARE
	JNC	TOUTB	;AH, NO OVERRUN
	MVI	M,0
	MVI	A,0DH	;GET A CARRIAGE RETURN CODE
	LXI	B,TOUTRET	;SET UP RETURN ADDRESS
	PUSH	B
	XCHG		;PUT CHANNEL ADDRESS BACK IN HL
	ANA	A
	PCHL		;SEND THE CR
TOUTRET	MVI	A,0AH	;SEND THE LF
	ANA	A
	LXI	B,TOUTRT1	;PUSH THE RETURN ADDRESS
	PUSH	B
	PCHL		;DO IT TO IT
TOUTRT1	MVI	A,16	;SET UP TO SEND OUT 16 SPACES
	LXI	B,TOUTRT3
TOUTRT2	PUSH	PSW	;SAVE THE COUNT
	PUSH	B	;SAVE THE RETURN ADDRESS
	PUSH	B	;TWICE
	MVI	A,20H	;SEND A SPACE
	ANA	A	;CLEAR ANY ZERO FLAG
	PCHL		;DO IT
TOUTRT3	POP	B	;RECOVER
	POP	PSW
	DCR	A	;UPDATE THE COUNT
	JNZ	TOUTRT2	;MORE TO GO
	JMP	TOUT6	;CONTINUE
TOUTTAB	POP	PSW
TOUTTAB2	MVI	A,20H	;SEND A SPACE
	LXI	B,1
	CALL	TOUTTAB1
	LDA	POSIT
	ANI	7
	RZ		;DONE
	JMP	TOUTTAB2
TOUT6	XCHG		;PUT CHANNEL ADDRESS IN DE
	MVI	M,18	;SET POSITION TO 1
TOUTB	POP	PSW	;GET CHARACTER BACK
	PUSH	PSW	;SAVE THE THING AGAIN
TOUT5	LXI	B,TOUT7	;SET UP RETURN ADDRESS
	PUSH	B
	XCHG		;PUT CHANNEL ADDRESS BACK IN HL
	ANA	A
	PCHL		;SEND THE CHARACTER
TOUT7	POP	PSW	;GET THE CHARACTER BACK
	POP	B	;GET THE NEXT CHANNEL ADDRESS
	JMP	TOUT1	;LOOP FOR ANOTHER TERMINAL
TOUT2	POP	PSW	;CLEAN UP THE STACK
	CPI	0DH	;WAS THIS A CR?
	RNZ		;NOPE
	MVI	A,0AH	;SEND A LF TOO
	LXI	B,1
	JMP	TOUTTAB1	;DO IT
TOUT3	INX	H	;GET RUBOUT FLAG
	INX	H
	MOV	A,M
	DCX	H	;GET ADDRESS OF POSITION FLAG
	ANA	A	;IS IT REAL?
	JP	TOUT8	;NOPE, SO NO POSITION DECREMENTING
	ANI	7FH	;STRIP THE ROCK BIT
	DCR	M	;UPDATE POSITION
	JP	TOUT8AA	;IF NOT NEGATIVE
	MVI	M,0	;IF IT WAS, FIX IT
TOUT8AA	JMP	TOUT5	;SEND THE RUBOUT
TOUT8	POP	PSW	;SUBSTITUTE THE REAL CODE
	MOV	A,M
	PUSH	PSW	;BACK TO THE STACK, JACK
	JMP	TOUT9	;TRY AGAIN
TOUT4	INX	H	;GET POSITION ADDRESS
	MVI	M,0	;CLEAR IT
	JMP	TOUT5	;SEND THE CARRIAGE RETURN
* RTN. C.6
* CASSETTE OUTPUT BYTE
* CARRY AND ZERO FLAGS SET UP AS IN CAIN
* IN: A = BYTE TO WRITE
COUT	PUSH	PSW
	CPI	0DH	;IS IT A CR?
	JZ	COUTCR	;YUP
COUTA	MVI	A,8
	LXI	B,1	;START WITH CHANNEL 1
	CALL	MFND	;FIND THE CASSETTE CHANNEL
	JNZ	COUTBA	;NONE FOUND
	POP	PSW	;GET FLAGS BACK
	PCHL		;GO GET IT
COUTCR	POP	PSW
	LXI	B,COUTCR1
	PUSH	B
	PUSH	PSW
	JMP	COUTA
COUTCR1	MVI	A,0AH
	JMP	COUT
COUTBA	POP	PSW
	RET		;DONE
* BINARY PORT ROUTINES
* BINARY PORT OUTPUT
BPORT	PUSH	PSW	;SAVE BYTE AND FLAGS
	LXI	B,1	;START WITH CHANNEL ONE
BPORT1	MVI	A,20H	;BIT FOR BINARY OUTPUT PORT
	CALL	MFND	;LOOK FOR IT
	JNZ	BPORT2	;NOT FOUND
	POP	PSW	;GET BYTE AND SET FLAGS
	PUSH	PSW	;SAVE 'EM AGAIN
	PUSH	B	;SAVE CHANNEL COUNT
	LXI	B,BPORT3	;STUFF THE RETURN ADDRESS
	PUSH	B
	PCHL		;GO TO THE PORT ROUTINE
BPORT3	POP	B	;RESTORE
	JMP	BPORT1	;TRY FOR ANOTHER ONE
BPORT2	POP	PSW	;RESTORE STACK
	RET		;DONE
* BINARY INPUT PORT
BINPOR	LXI	B,1	;START WITH CHANNEL ONE
	PUSH	PSW	;SAVE 'EM
	MVI	A,10H	;INPUT PORT BIT
	CALL	MFND	;LOOK FOR IT
	JNZ	SPRAT	;NONE FOUND
	POP	PSW	;GOT IT
	LXI	B,BINPOR1	;STUFF A RETURN ADDRESS
	PUSH	B
	PCHL		;DO IT
BINPOR1	MVI	B,23H	;TAPE READ ERROR?
	JC	ERROR	;YUP
	RET		;NOPE, ALL'S OK
OBPORT	PUSH	B	;SAVE IT
	MOV	B,A
	MVI	A,1
	ANA	A
	MOV	A,B	;BACK
	POP	B
	JMP	BPORT
OBINPOR	MVI	A,1
	ANA	A
	JMP	BINPOR
* IN: CATV = 0 FOR TV, <> 0 FOR CASSETTE
*  HL = ADDRESS OF FIRST CHARACTER IN LINE
*  LAST CHARACTER IN LINE HAS BIT 7 SET
LNOT	LDA	CATV	;GET TV/CASSETTE FLAG
	MOV	B,A	;STICK IT IN B
	MOV	A,M	;GET THE CHARACTER TO A
	ANA	A	;SET FLAGS
	PUSH	PSW	;SAVE FLAGS
	ANI	7FH	;STRIP UPPER BIT
	MOV	D,A	;SAVE THE CHARACTER
	POP	PSW	;RESTORE FLAGS
	MOV	A,D	;PUT THE CHARACTER BACK
	PUSH	H	;SAVE ADDRESS
	PUSH	PSW	;SAVE CHARACTER AND THE FLAGS
	INR	B	;CHECK FOR B=0
	DCR	B
	JNZ	LNOT2	;CASSETTE MODE
	POP	PSW	;GET CHARACTER BACK
	PUSH	PSW	;SAVE IT AGAIN
	CALL	TOUT	;OUTPUT TO TERMINAL(S)
LNOT3	POP	PSW	;GET FLAGS BACK
	POP	H	;GET ADDRESS BACK
	INX	H	;UPDATE INDEX
	RM		;ALL DONE.....
	ORI	1	;CLEAR THE ZERO FLAG
	JMP	LNOT	;LOOP FOR ANOTHER CHARACTER
LNOT2	POP	PSW	;GET THE CHARACTER BACK
	PUSH	PSW	;SAVE IT AGAIN
	CALL	COUT	;SEND IT TO THE CASSETTE(S)
	JMP	LNOT3	;RESUME NORMAL SEQUENCE
* RTN. C.8
* LINE OUTPUT FOR TERMINALS
* IN: HL = FIRST ADDRESS OF STRING
* LAST CHARACTER IN STRING HAS BIT 7 SET
MSGER	XRA	A	;CLEAR CATV
	STA	CATV
	JMP	LNOT	;OUTPUT LINE
*
* RTN. C.9
* LINE INPUT FOR CASSETTE AND KEYBOARD
* IN: HL = FIRST ADDRESS TO STORE STRING
* OUT: HL= ADR FOLLOWING STRING (SET TO 0).
* USED BY INPUT PROCESSOR, EXECUTIVE.
*
LIIN	LXI	D,0	;NUMBER OF CHARACTERS TO 0
LIIN0	MVI	A,1
	ANA	A
LIIN1	PUSH	D	;SAVE IT
	PUSH	H	;SAVE ADDRESS
	PUSH	PSW	;SAVE FLAGS
	MOV	C,A	;SAVE IN C
	LDA	CATV	;SEE IF THIS IS FOR CASSETTE
	ANA	A	;SET FLAGS
	JNZ	LIIN2	;SURE IS
	POP	PSW	;RESTORE FLAGS
	CALL	KYIN	;GET A CHARACTER FROM KEYBOARD
LIIN3	CPI	7FH	;CHECK FOR A RUBOUT
	POP	H	;RESTORE ADDRESS
	POP	D	;RESTORE NUMBER OF CHARACTERS
	JZ	LIIN4	;IT WAS
	CPI	'.'	;CHECK FOR PERIOD
	JZ	AUTO1	;SURE IS
	CPI	1	;CHECK FOR FLAG CODE
	JZ	LIZZZ	;SURE WAS
	CPI	3	;CHECK FOR CONTROL C PUSHED
	JZ	RUN2	;YUP, SO TERMINATE ANY RUN MODE
	CPI	0DH	;CHECK FOR A CARRIAGE RETURN
	JZ	LIIN5	;IT WAS
	CPI	15H	;CHECK FOR CONTROL U
	JZ	LII00	;SURE WAS
	CPI	9	;CHECK FOR TAB
	JZ	LIZZZ	;SURE IS
	CPI	20H	;CHECK FOR OTHER CONTROL CHARACTERS
	JC	LII20	;SURE IS
LIZZZ	PUSH	H	;SAVE ADR FOR CHARACTER.
	PUSH	D	;SAVE D&E.
	PUSH	PSW	;SAVE REGISTER A.
	XCHG		;PUT PROPOSED ADR IN D&E.
	LHLD	FARY	;GET BOTTOM OF UPPER AREA USED.
	DCX	H	;ALLOW A FEW BYTES.
	DCX	H
	CALL	CMP16	;ARE WE AGAINST IT YET?
	MVI	B,27H	;OUT OF MEMORY ERROR?
	JC	ERROR
	POP	PSW	;RESTORE REGISTER A.
	POP	D	;RESTORE D&E.
	POP	H	;RESTORE H&L.
	MOV	M,A	;NOW PUT CHAR IN MEMORY.
	INX	H	;UPDATE THE INDEX
	INX	D	;UPDATE NUMBER OF CHARACTERS
	LDA	CATV	;CHECK FOR CASSETTE MODE
	ANA	A	;SET FLAGS
	JNZ	LIIN6	;IT IS 
	DCX	H	;GET CHARACTER ADDRESS
	MOV	A,M	;GET CHARACTER
	INX	H	;BUMP INDEX UP
LIIN8	PUSH	D
	PUSH	H	;SAVE ADDRESS
LIIN7	CALL	TOUT	;ECHO IT
	POP	H	;RESTORE ADDRESS
	POP	D
LIIN6	ORI	1	;CLEAR CARRY AND ZERO FLAGS
	JMP	LIIN1	;LOOP FOR MORE CHARACTERS
LIIN2	POP	PSW	;RESTORE FLAGS
	CALL	CAIN	;GET A CHARACTER FROM THE CASSETTE
	JMP	LIIN3	;CONTINUE PROCESSING
LIIN4	DCX	H	;BACK UP ONE
	DCX	D	;DECREMENT NUMBER OF CHARACTERS
	JMP	LIIN8	;SETN THE RUBOUT CODE.
LIIN5	DCX	H	;BACK UP TO MARK THE LAST CHARACTER
	MOV	A,D	;CHECK FOR NO INPUT
	ORA	E
	JNZ	LIINW	;THERE IS SOME INPUT
	STC
	RC		;RETURN IF NO CHARACTERS WERE INPUT
LIINW	MOV	A,M	;GET THE LAST CHARACTER
	CPI	5CH	;CHECK FOR A BACKSLASH
	JZ	LII68	;SURE WAS
	ORI	80H	;SET THE UPPER BIT
	MOV	M,A	;STUFF IT BACK
	INX	H	;GET NEXT POSITION
	MVI	M,0	;CLEAR IT
	LDA	CATV	;CHECK FOR CASSETTE MODE
	ANA	A	;SET FLAGS
	RNZ	
	CALL	CRLF	;SEND A CARRIAGE RETURN
	XRA	A	;CLEAR CARRY
	RET		;DONE...
LII00	MOV	A,D	;CHECK FOR BEING AT FIRST CHARACTER
	ORA	E
	JZ	LIIN6	;SURE WAS
	MVI	A,7FH	;SEND THE RUBOUT
	PUSH	H	;SAVE IT ALL
	PUSH	D
	CALL	TOUT
	POP	D	;RESTORE
	POP	H
	DCX	D	;UPDATE COUNT
	DCX	H
	JMP	LII00	;DO IT AGAIN
LII20	MVI	A,1	;CLEAR FLAGS
	ANA	A
	JMP	LIIN1	;GET ANOTHER INPUT
LII68	MVI	A,0DH	;GET CR CODE BACK
	INX	H	;UPDATE THE INDEX
	JMP	LIIN8	;ECHO IT AND GET ANOTHER.
*
AUTO1	MOV	A,D	;CHECK FOR FIRST CHARACTER
	ORA	E
	MVI	A,'.'	;REPLACE JUST IN CASE
	JNZ	LIZZZ	;IT'S NOT
	LDA	CMND	;CHECK FOR ENTER MODE
	ANA	A
	MVI	A,'.'	;BACK WITH A PERIOD
	JNZ	LIZZZ	;IT'S NOT
	PUSH	B	;SAVE ANY BC
	PUSH	H	;SAVE STARTING ADDRESS
	LHLD	INSR	;FIND LAST STATEMENT
	SHLD	LINE
AUTO3	CALL	MBOS	;MOVE BACK ONE
	MOV	A,M	;LOOK FOR STATEMENT NAME
	CPI	9FH	;CHECK IT OUT
	JNZ	AUTO3	;NOPE
	INX	H
	INX	H	;FISH OUT THE SYMBOL NUMBER
	MOV	C,M
	INX	H
	MOV	B,M
	LHLD	STAB	;GET START OF SYMBOL TABLE
AUTO90	DCX	B
	MOV	A,B	;CHECK FOR DONENESS
	ORA	C
	JZ	AUTO91
	CALL	COUNT
	DAD	D
	JMP	AUTO90
AUTO91	CALL	COUNT	;COUNT THE CHARACTERS
	MOV	C,E	;TO BC
	MOV	B,D
	POP	D	;GET PLACE TO PUT IT
	PUSH	D	;SAVE IT AGAIN
	XCHG		;SAVE IT
	SHLD	LINE
	XCHG
	CALL	MOVE	;MOVE THE LABEL IN
	POP	H	;RESTORE THE ADDRESS
	DAD	B	;ADD THE NUMBER OF CHARACTERS MOVED
	MVI	M,20H	;STORE A FINISHING SPACE
	DCX	H
	MOV	A,M	;STRIP END STROBE
	ANI	7FH
	MOV	M,A
	INX	H
AUTO5	DCX	H	;BACK UP FOR DIGIT
	MOV	A,M
	INX	H
	CALL	AUTO6	;CHECK FOR DIGIT
	JNC	AUTO4
	MVI	M,'0'	;STORE CODE FOR ZERO
	INX	H
	MVI	M,20H
	JMP	AUTO5	;TRY IT AGAIN
AUTO4	DCX	H	;FIND FIRST DIGIT
	MOV	A,M	;GET A DIGIT
	CALL	AUTO6
	JNC	AUTO4	;STILL A DIGIT
	INX	H	;BACK TO FIRST ONE
	PUSH	H	;SAVE IT
	LXI	D,TMP11	;GET A PLACE FOR A NUMBER
	CALL	STNM	;CONVERT IT
	LXI	H,TMP11	;GET NUMBER TO STRING
	LXI	D,ONEEE	;BUT FIRST ADD ONE
	LXI	B,TMP11
	CALL	ADDER
	POP	D	;GET BACK THAT ADDRESS
	LXI	H,TMP11	;WHERE THE NUMBER IS
	CALL	NMST	;TO A STRING
	DCX	D	;SET END BIT
	LDAX	D
	ORI	80H	;SET IT
	STAX	D
	LHLD	LINE
	CALL	MSGER	;DUMP THE NAME OUT
	LHLD	LINE	;SET UP FOR RETURN TO LIIN
	CALL	COUNT
	DAD	D
	POP	B
	DCX	H
	MOV	A,M
	ANI	7FH
	MOV	M,A	;CLEAR THE END BIT
	INX	H
	JMP	LIIN0	;GO BACK TO DO IT.
AUTO6	CPI	30H
	RC
	CPI	3AH
	CMC
	RET
*
* RTN. C.11
* SEND CARRIAGE RETURN 
CRLF	MVI	A,0DH	;GET CARRIAGE RETURN CODE
	CALL	TOUT	;SEND IT
	RET		;DONE....
*
* RTN. C.5
* CASSETTE INPUT BYTE
* CARRY AND ZERO FLAGS MUST BE PROPERLY SET UP
* CARRY FOR LAST BYTE
* ZERO FOR FIRST BYTE
CAIN	PUSH	PSW	;SAVE FLAGS
	MVI	A,4	;CODE FOR CASSETTE INPUT
	LXI	B,1	;CHANNEL TO START SEARCHING AT
	CALL	MFND	;FIND THE CASSETTE CHANNEL
	POP	PSW	;FLAGS BACK
	CALL	CAIN2	;GET A BYTE
	MVI	B,23H	;ERROR CODE JUST IN CASE
	JC	ERROR	;TAPE ERROR
	RET		;DONE...
CAIN2	PCHL
TOUTZ	XRA	A	;CLEAR POSIT
	STA	POSIT
	JMP	TOUTX
TOUTY	LDA	POSIT	;DECREMENT POSIT
	DCR	A
	STA	POSIT
	JMP	TOUTX
*
LINK07	LINK	A:TBASIC8
